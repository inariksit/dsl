EModule.  Rules ::= [Rule];
terminator Rule ";";

layout toplevel;
entrypoints Rules;
comment "//" ;
comment "/*" "*/" ;
rules      RuleDef   ::= RuleNum | RuleID | RuleName
                       | RuleNum   RuleID 
                       | RuleNum            RuleName
                       |           RuleID   RuleName ;
RID.       RuleID    ::= Ident ;
RName.     RuleName  ::= LangStrings ;
RNum.      RuleNum   ::= Integer;

RuleStanza.  Rule      ::= "RULE" RuleDef RuleBody;

RBNoop.    RuleBody  ::= "NOOP";

-- DEEM Item.isPotato AND Item.isVegetable WHEN ...
RBDeem.    RuleBody  ::= "DEEM" [ObjAttrAnd] "WHEN" PredExpr;
separator nonempty ObjAttrAnd "AND";
ObjAttrAnd1. ObjAttrAnd ::= ObjAttr ;

-- ... WHEN  
rules      PredExpr  ::= ObjAttr
                       | MatchExpr
                       | PredExpr "AND" PredExpr
                       | PredExpr "OR"  PredExpr 
                       | "(" PredExpr ")";

rules      FancyBoolOp ::= PlainBoolOp Likelihood;

rules      PlainBoolOp ::= "AND" | "OR" ;

rules      Likelihood  ::= "" | "LIKELY" | "UNLIKELY";

rules     MatchExpr  ::= ObjAttr "~" JunctionList
                       | "True"
                       | "False" ;

rules     JunctionList ::= "[" CommaList "]"
                         | "["   AndList "]"
                         | "["    OrList "]"
                         | "["   XorList "]" ;

rules     CommaList ::= [CommaElem];
rules     CommaElem ::= ObjAttr;
separator nonempty CommaElem ",";

rules     AndList ::= [AndElem];
rules     AndElem ::= ObjAttr;
separator nonempty AndElem "&";

rules     OrList ::= [OrElem];
rules     OrElem ::= ObjAttr;
separator nonempty OrElem "|";

rules     XorList ::= [XorElem];
rules     XorElem ::= ObjAttr;
separator nonempty XorElem "|";

rules      ObjAttrElem  ::= Ident ;                  -- Foo

rules      ObjAttr      ::= [ObjAttrElem]            -- Foo.Bar.Baz
                        | ObjAttr "(" CommaList ")"  -- Foo.Bar(Baz, Quux)
                        ;
separator nonempty ObjAttrElem ".";

rules      KeyVal     ::= ObjAttr ":" ObjAttr
                        | ObjAttr "=" ObjAttr ;
separator nonempty KeyVal ",";


EString.      NormalString ::= String ;
ELangStrings. LangStrings  ::= [LangString] ;
    separator nonempty LangString " ";
ELangString.  LangString   ::= [LangID] ":" NormalString ;
ELangID.      LangID       ::= Ident ;
    separator nonempty LangID "," ;
